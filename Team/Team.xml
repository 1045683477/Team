<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Team</name>
    </assembly>
    <members>
        <member name="T:Team.AuthHelper.OverWrite.IJwtHelper">
            <summary>
            token 的生成与解密
            </summary>
        </member>
        <member name="M:Team.AuthHelper.OverWrite.IJwtHelper.IssueJWT(Team.AuthHelper.OverWrite.TokenModelJWT)">
            <summary>
            颁发 token
            </summary>
            <param name="tokenModel"></param>
            <returns></returns>
        </member>
        <member name="M:Team.AuthHelper.OverWrite.IJwtHelper.SerizlizeJWT(System.String)">
            <summary>
            解析字符串
            </summary>
            <param name="jwtStr"></param>
            <returns></returns>
        </member>
        <member name="M:Team.AuthHelper.OverWrite.JwtHelper.IssueJWT(Team.AuthHelper.OverWrite.TokenModelJWT)">
            <summary>
            颁发 token
            </summary>
            <param name="tokenModel"></param>
            <returns></returns>
        </member>
        <member name="M:Team.AuthHelper.OverWrite.JwtHelper.SerizlizeJWT(System.String)">
            <summary>
            解析字符串
            </summary>
            <param name="jwtStr"></param>
            <returns></returns>
        </member>
        <member name="M:Team.AutoTimedJob.AutoDailyChartJob.UpdateRunTimeDailyChart">
            <summary>
            更新跑团每日排行榜
            </summary>
        </member>
        <member name="M:Team.AutoTimedJob.AutoTeamListJob.UpdateRunTeamList">
            <summary>
            跑团组队列表每十分钟更新一次
            </summary>
            <returns></returns>
        </member>
        <member name="M:Team.AutoTimedJob.AutoWeekChartJob.UpdateRunTimeWeekBufferChart">
            <summary>
            将每日跑团的信息加入周排行缓冲表中
            </summary>
        </member>
        <member name="M:Team.AutoTimedJob.AutoWeekChartJob.UpdateRunTimeWeekChart">
            <summary>
            刷新周榜单
            </summary>
            <returns></returns>
        </member>
        <member name="T:Team.Controllers.ChildController">
            <summary>
            家长模式
            </summary>
        </member>
        <member name="M:Team.Controllers.ChildController.AddChildrenAsyncApi(System.String,Team.Model.Model.ParentModel.RelationShip)">
            <summary>
            添加孩子
            </summary>
            <param name="account">被绑定者得账号</param>
            <param name="relationShip">关系</param>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.ChildController.SearchChildrenLalApi(System.Int32,System.Double,System.Double)">
            <summary>
            查看绑定孩子的前十条经纬度与距离
            </summary>
            <param name="sonId">孩子Id</param>
            <param name="latitude">经度</param>
            <param name="longitude">纬度</param>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.ChildController.SearchAllChildrenApi">
            <summary>
            查询所有绑定的孩子
            </summary>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.ChildController.HttpRequest">
            <summary>
            解析 header 里面的 token
            </summary>
            <returns></returns>
        </member>
        <member name="T:Team.Controllers.LALController">
            <summary>
            经纬度上传
            </summary>
        </member>
        <member name="M:Team.Controllers.LALController.UpLoadApiAsync(Team.Model.AutoMappers.UserMapper.LAndLUpLoadMapper)">
            <summary>
            经纬度上传
            </summary>
            <param name="lAndLUpLoadMapper"></param>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.LALController.ObtainAll(System.Double,System.Double)">
            <summary>
            获取所有用户的经纬度,与距离你现在位置距离
            </summary>
            <param name="latitude">经度</param>
            <param name="longitude">纬度</param>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.ListController.SearchDailyList">
            <summary>
            查询每日前一百战队榜单
            </summary>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.ListController.SearchWeekList">
            <summary>
            查询每周前一百战队榜单
            </summary>
            <returns></returns>
        </member>
        <member name="T:Team.Controllers.LoginController">
            <summary>
            登陆,注册，修改密码 API
            </summary>
        </member>
        <member name="M:Team.Controllers.LoginController.UserRegisteredApi(Team.Model.AutoMappers.UserMapper.UserRegisteredMap)">
            <summary>
            注册
            </summary>
            <param name="userRegistered"></param>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.LoginController.UserLoginApi(Team.Model.AutoMappers.UserMapper.UserLoginMap)">
            <summary>
            登陆
            </summary>
            <param name="userLogin">登陆模板</param>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.LoginController.UserForUpdateApi">
            <summary>
            为修改客户数据提供查询接口
            </summary>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.LoginController.UserUpdateApi(Team.Model.AutoMappers.UserMapper.UserUpdateMap)">
            <summary>
            修改个人资料，密码姓名，省份大学
            </summary>
            <param name="update"></param>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.LoginController.RetrievePasswordApi(System.String)">
            <summary>
            找回密码
            </summary>
            <param name="account">账号</param>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.LoginController.UserUpLoadPhoto(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            上传用户头像
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.LoginController.UserLoadingPhoto">
            <summary>
            加载用户头像
            </summary>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.LoginController.UserUpLoadCommunicationIdAsync(System.String)">
            <summary>
            添加通信 ID
            </summary>
            <param name="communicationId"></param>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.LoginController.HttpRequest">
            <summary>
            解析 header 里面的 token
            </summary>
            <returns></returns>
        </member>
        <member name="T:Team.Controllers.RunController">
            <summary>
            跑步 记录与查询
            </summary>
        </member>
        <member name="M:Team.Controllers.RunController.FreeRecordApi(Team.Model.AutoMappers.TeamMapper.RunRecordMap)">
            <summary>
            跑步数据记录保存
            </summary>
            <param name="recordMap">记录模板</param>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.RunController.FreeAllStatisticalApi(Team.Model.Model.TeamModel.SportFreeModel)">
            <summary>
            查询跑步记录统计
            </summary>
            <param name="sport"></param>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.RunController.FreeSearchApi">
            <summary>
            查询所有跑步记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.RunController.ExeExerciseApi">
            <summary>
            体育锻炼及格次数与记录 要求：4000km 跑步模式
            </summary>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.RunController.HttpRequest">
            <summary>
            获取token
            </summary>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.RunTeamController.RunTeamCreateApiAsync(Team.Model.AutoMappers.RunTeamMapper.RunTeamCreateMap)">
            <summary>
            创建队伍，调用此api后调用UpdateUserRunTeamId  唯有非队长才可调用此api
            </summary>
            <param name="runTeam">队伍模板</param>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.RunTeamController.UpdateUserRunTeamIdAsync">
            <summary>
            修改用户信息 RunTeamId 获取队伍 Id,请务必在调用RunTeamCreateApi之后使用
            </summary>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.RunTeamController.SearchRunTeamId">
            <summary>
            查询自身跑步队伍 Id
            </summary>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.RunTeamController.DeleteTeamApiAsync">
            <summary>
            删除自身创建的队伍,队长权限，删除后请重新登陆
            </summary>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.RunTeamController.SearchTeamApi(System.Int32)">
            <summary>
            查看某个队伍信息
            </summary>
            <param name="teamId"></param>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.RunTeamController.UpdateTeamApi(Team.Model.AutoMappers.RunTeamMapper.RunTeamUpdateMap)">
            <summary>
            修改队伍信息,队长权限
            </summary>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.RunTeamController.UpLoadPhoto(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            上传队伍图片,队长权限
            </summary>
            <param name="file">图片</param>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.RunTeamController.LoadingPhoto(System.Int32)">
            <summary>
            加载自身战队图片
            </summary>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.RunTeamController.ApplyToJoinTeamApiAsync(System.Int32)">
            <summary>
            申请加入队伍
            </summary>
            <param name="teamId">队伍 Id</param>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.RunTeamController.SearchAllApplicant">
            <summary>
            获取队伍所有申请者列表,队长权限
            </summary>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.RunTeamController.AgreeWithTheTeamApi(System.Int32)">
            <summary>
            同意入队,队长权限
            </summary>
            <param name="userId">申请者 Id</param>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.RunTeamController.ExitRunTeam">
            <summary>
            退出跑团队伍
            </summary>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.RunTeamController.HttpRequest">
            <summary>
            解析 header 里面的 token
            </summary>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.SendController.Send(System.String,System.String)">
            <summary>
            发送短信
            </summary>
            <param name="cpacha">短信内容</param>
            <param name="phone">手机号</param>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.TeamController.TeamCreateApi(Team.Model.AutoMappers.TeamMapper.TeamCreateMap)">
            <summary>
            创建运动队伍
            </summary>
            <param name="teamCreate">创建队伍模板</param>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.TeamController.TeamSearchUserCreateAllApi">
            <summary>
            查询用户自身所有创建队伍
            </summary>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.TeamController.TeamSearchUserJoinAllApi">
            <summary>
            查询该用户所有参加记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.TeamController.TeamSearchTeamingApi(Team.Model.Model.TeamModel.Sport)">
            <summary>
            查询某个运动所有正在组队队伍,查询同校队伍
            </summary>
            <param name="sport">运动类型</param>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.TeamController.TeamSearchByIdTeamingApi(System.Int32)">
            <summary>
            查询某个正在组队的团队信息
            </summary>
            <param name="teamId">团队 Id</param>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.TeamController.TeamSearchByNameApi(System.String)">
            <summary>
            通过队伍名查询正在组队团队
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.TeamController.ParticipateInTeamApi(System.Int32)">
            <summary>
            参加队伍
            </summary>
            <param name="teamId">队伍 Id</param>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.TeamController.TeamYpLoadPhoto(Microsoft.AspNetCore.Http.IFormFile,System.Int32)">
            <summary>
            上传队伍图片
            </summary>
            <param name="formFile">图片</param>
            <param name="teamId">队伍 Id</param>
            <returns></returns>
        </member>
        <member name="M:Team.Controllers.TeamController.TeamLoadingPhoto(System.Int32)">
            <summary>
            加载单个战队图片
            </summary>
            <returns></returns>
        </member>
        <member name="F:Team.Controllers.TeamController.upload_path">
            <summary>
            图片路径
            </summary>
        </member>
        <member name="M:Team.Controllers.TeamController.HttpRequest">
            <summary>
            解析 header 里面的 token
            </summary>
            <returns></returns>
        </member>
        <member name="T:Team.Validator.TeamValidator.TeamCreateValidator">
            <summary>
            队伍创建模板验证
            </summary>
        </member>
        <member name="T:Team.Validator.UserValidator.UserRegisteredValidator">
            <summary>
            注册模板限制
            </summary>
        </member>
        <member name="T:Team.Validator.UserValidator.UserUpdateValidator">
            <summary>
            用户更新限制
            </summary>
        </member>
    </members>
</doc>
